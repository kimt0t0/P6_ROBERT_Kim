{"version":3,"sources":["sauces.js"],"names":["Sauce","require","fs","PasswordValidator","exports","req","res","next","find","status","json","sauces","error","getOneSauce","findOne","_id","params","id","then","sauce","getAllSauces","console","log","body","sauceObject","JSON","parse","_objectSpread","imageURL","save","message","createSauce","file","protocol","get","filename","_userId","userId","auth","updateOne","deleteSauce","modifySauce","thing","imageUrl","split","unlink","concat"],"mappings":"wuBAGA,IAAMA,MAAQC,QAAQ,mBAChBC,GAAKD,QAAQ,MACbE,kBAAoBF,QAAQ,sBAFlCG,QAAMJ,aAAgB,SAAAK,EAAAC,EAAAC,GASlBP,MAAMQ,OARJN,KAAKD,SAAAA,GAAAA,OAAXK,EAAAG,OAAA,KAAAC,KAAAC,KAQI,MAEO,SAAAC,GAAK,OAAIN,EAAIG,OAAO,KAAKC,KAAK,CAACE,MAAAA,OAJ1CR,QAAAS,YAAA,SAAAR,EAAAC,EAAAC,GASIO,QAAQ,CAACC,IAAKV,EAAIW,OAAOC,KACxBC,KAAK,SAAAC,GAAK,OAAIb,EAAIG,OAAO,KAAKC,KAAKS,KADpC,MARIC,SAAAA,GAAAA,OAARd,EAAuBG,OAAA,KAAAC,KAAA,CAAAE,MAAAA,OAGmBA,QAAAA,YAAAA,SAAAA,EAAAA,EAAAA,GAADS,QAAzBC,IAAAjB,EAAAkB,MAFZ,IAAAC,EAAAC,KAAAC,MAAArB,EAAAkB,KAAAJ,OADJE,QAAAC,IAAAE,UAMAA,EAAAT,IAeI,IAAMI,EAAQ,IAAInB,MAAJ2B,cAAA,GAdVd,EAcU,CAbFe,SAAMZ,GAAAA,OAAOC,EAAAA,SAAPD,OAAAA,OAAOC,EAAAA,IAAAA,QAAPD,YAAAA,OAAOC,EAAAA,KAAAA,aACdI,QAAIf,IAAIG,GADnBU,EAAAU,OAEsCjB,KAAK,WAA/BN,EAAAG,OAAA,KAAAC,KAAA,CAAAoB,QAAA,kBAFZ,MADJ,SAAAlB,GAAA,OAAAN,EAAAG,OAAA,KAAAC,KAAA,CAAAE,MAAAA,OAQAR,QAAQ2B,YAAc,SAAA1B,EAAAC,EAACD,GACnBgB,IAAQC,EAARjB,EAAA2B,KAAAL,cAAA,GACMH,KAAAA,MAAcC,EAAKC,KAAMrB,OAD/B,CAEAgB,SAAYG,GAAAA,OAAAA,EAAZS,SAAYT,OAAAA,OAAZnB,EAAA6B,IAAA,QAAYV,YAAAA,OAAZnB,EAAA2B,KAAAG,YAFAR,cAAA,GAGOH,EAAAA,aAEIA,EAAGY,QAEVpC,MAAAc,QAAA,CAAAC,IAAAV,EAAAW,OAAAC,KACAW,KAAQ,SAAAT,GAHZA,EAAAkB,QAAAhC,EAAAiC,KAAAD,OAKYlB,EAAZV,OAAA,KAAAC,KAAA,CAAAoB,QAAA,mBAImC9B,MAAAuC,UAAA,CAAAxB,IAAAV,EAAAW,OAAAC,IAAAU,cAAA,GAAAH,EAAA,CAAAT,IAAAV,EAAAW,OAAAC,MAA/BC,KAAA,WAAA,OAAAZ,EAAAG,OAAA,KAAAC,KAAA,CAAAoB,QAAA,uBAA+B,MAE5BlB,SAAAA,GAAK,OAAAN,EAAAG,OAAA,KAAAC,KAAA,CAAAE,MAAAA,QATR,MASQ,SAAAA,GAAA,OAAAN,EAAAG,OAAA,KAAAC,KAAA,CAAAE,MAAAA,OA0BhBR,QAAQoC,YAAc,SAACnC,EAAKC,EAAKC,GAC7BP,MAAMc,QAAQ,CAAEC,IAAKV,EAAIW,OAAOC,KAvB5BwB,KAAAA,SAAAA,GACEjB,GAAAA,EAAcnB,QAAAA,EAAAiC,KAAAD,OAER/B,EAAAG,OAAQ,KAACwB,KAAT,CAAAH,QAAA,uBAFQ,CAKbN,IAAYY,EAAnBM,MAAAC,SAAAC,MAAA,YAAA,GACc1C,GAAA2C,OAAA,UAAAC,OAAAX,GAAA,WAAiBlB,MAAAA,UAAAA,CAAAA,IAAAA,EAAAA,OAAAA,KACrBC,KAAW,WAAAZ,EAAAG,OAAA,KAAAC,KAAA,CAAAoB,QAAA,uBADUb,MAECqB,SAAAA,GAAKD,OAA7B/B,EAAqCG,OAAA,KAAAC,KAAA,CAAAE,MAAAA,WAc7C,MAXa,SAAAA,GAAA,OAAAN,EAAAG,OAAA,KAAAC,KAAA,CAAAE,MAAAA,OACsDG,QAAAA,UAASC,SAAAA,EAAOC,EAAAA,GAAvEX,EAAAG,OACU,KAAAC,KAAA,CAAAoB,QAAA","file":"sauces.min.js","sourcesContent":["/* *** SAUCE CONTROLLER *** */\r\n\r\n/* VARIABLES */\r\nconst Sauce = require('../models/Sauce');\r\nconst fs = require('fs');\r\nconst PasswordValidator = require('password-validator');\r\n\r\n\r\n/* FONCTIONS */\r\n\r\n/* Get all sauces: */\r\nexports.getAllSauces = (req, res, next) => {\r\n    Sauce.find()\r\n    .then((sauces) => res.status(200).json(sauces))\r\n    .catch(error => res.status(400).json({error}))\r\n};\r\n\r\n/* Get one sauce: */\r\nexports.getOneSauce = (req, res, next) => {\r\n    findOne({_id: req.params.id})\r\n    .then(sauce => res.status(200).json(sauce))\r\n    .catch(error => res.status(400).json({error}))\r\n};\r\n\r\n\r\n/* Create sauce: */\r\nexports.createSauce = (req, res, next) => {\r\n    console.log(req.body);\r\n    const sauceObject = JSON.parse(req.body.sauce);\r\n    console.log(sauceObject);\r\n    delete sauceObject._id;\r\n    //delete sauceObject._userId;\r\n    const sauce = new Sauce ({\r\n        ...sauceObject,\r\n        //userId: req.auth.userId,\r\n        imageURL: `${req.protocol}://${req.get('host')}/images/${req.file.filename}`,\r\n    });\r\n    console.log(sauce);\r\n    sauce.save()\r\n\r\n    .then( () => {\r\n        res.status(201).json({message: 'Sauce saved'})\r\n    })\r\n    .catch(error => res.status(400).json({error}))\r\n};\r\n\r\n/* Modify sauce: */\r\nexports.modifySauce = (req, res, next) => {\r\n    const sauceObject = req.file ? {\r\n        ...JSON.parse(req.body.thing),\r\n        imageUrl: `${req.protocol}://${req.get('host')}/images/${req.file.filename}`\r\n    } : {...req.body};\r\n\r\n    delete sauceObject._userId;\r\n    Sauce.findOne({_id: req.params.id})\r\n        .then((sauce) => {\r\n            if (sauce.userId != req.auth.userId) {\r\n                res.status(401).json({message: 'Not authorized'});\r\n            }\r\n            else {\r\n                Sauce.updateOne({_id: req.params.id}, {...sauceObject, _id: req.params.id})\r\n                    .then(() => res.status(200).json({message: 'Object modified!'}))\r\n                    .catch(error => res.status(401).json({error}));\r\n            }\r\n        })\r\n        .catch(error => res.status(400).json({error}))\r\n};\r\n\r\n/* Delete sauce: */\r\nexports.deleteSauce = (req, res, next) => {\r\n    Sauce.findOne({ _id: req.params.id}) // utilisation de l'idée pour accéder à la sauce dans la bdd\r\n        .then(sauce => {\r\n            if (sauce.userId != req.auth.userId) { // vérification si utilisateur <-> créateur\r\n                res.status(401).json({message: 'Not authorized'});\r\n            } else {\r\n                const filename = thing.imageUrl.split('/images/')[1]; // récupération nom fichier dans url image\r\n                fs.unlink(`images/${filename}`, () => { //suppression du fichier et callback à exécuter ensuite\r\n                    Sauce.deleteOne({_id: req.params.id})\r\n                        .then(() => { res.status(200).json({message: 'Objet supprimé !'})})\r\n                        .catch(error => res.status(401).json({ error }));\r\n                });\r\n            }\r\n        })\r\n        .catch( error => res.status(500).json({ error }))\r\n };\r\n\r\n /* Like sauce: */\r\nexports.likeSauce = (req, res, next) => {\r\n    res.status(200).json({message: 'Objet liké !'});\r\n}"]}