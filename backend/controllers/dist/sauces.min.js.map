{"version":3,"sources":["sauces.js"],"names":["Sauce","require","fs","PasswordValidator","exports","req","res","next","sauceObject","JSON","parse","body","sauce","_id","_userId","_objectSpread","imageUrl","concat","protocol","get","file","filename","then","status","json","message","error","modifySauce","updateOne","params","id","findOne","unlink","getAllSauces","find","sauces","split","deleteOne","like","$inc","likes","$push","usersLiked","userId","dislikes","usersDisliked","getOneSauce","includes","$pull"],"mappings":"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","file":"sauces.min.js","sourcesContent":["/* *** SAUCE CONTROLLER *** */\r\n\r\n/* VARIABLES */\r\nconst Sauce = require('../models/Sauce');\r\nconst fs = require('fs');\r\nconst PasswordValidator = require('password-validator');\r\n\r\n\r\n/* FONCTIONS */\r\n\r\n/* Create sauce: */\r\nexports.createSauce = (req, res, next) => {\r\n    const sauceObject = JSON.parse(req.body.sauce);\r\n\r\n    delete sauceObject._id;\r\n    delete sauceObject._userId;\r\n    \r\n    const sauce = new Sauce ({\r\n        ...sauceObject,\r\n        imageUrl: `${req.protocol}://${req.get('host')}/images/${req.file.filename}`,\r\n    });\r\n\r\n    sauce.save()\r\n\r\n    .then( () => {\r\n        res.status(201).json({message: 'Sauce saved'})\r\n    })\r\n    .catch(error => res.status(400).json({error}));\r\n};\r\n\r\n/* Modify sauce: */\r\nexports.modifySauce = (req, res, next) => {\r\n    const sauceObject = req.file ? {\r\n        ...JSON.parse(req.body.sauce),\r\n        imageUrl: `${req.protocol}://${req.get('host')}/images/${req.file.filename}`,\r\n    } : {...req.body};\r\n\r\n    Sauce.updateOne({_id: req.params.id}, {...sauceObject, _id: req.params.id})\r\n    .then(() => res.status(200).json({message: 'Object modified!'}))\r\n    .catch(error => res.status(401).json({error}));\r\n};\r\n\r\n/* Delete sauce: */\r\nexports.deleteSauce = (req, res, next) => {\r\n    Sauce.findOne({_id: req.params.id})\r\n    .then(sauce => {\r\n        const filename = sauce.imageUrl.split('/images')[1]; //rÃ©cupÃ©ration adresse image\r\n        fs.unlink(`images/${filename}`, () => { //suppression image du serveur\r\n        Sauce.deleteOne({_id: req.params.id})\r\n        .then(() => res.status(200).json({message: 'Sauce deleted!'}))\r\n        .catch(error => res.status(400).json({error}))\r\n    });\r\n    });\r\n };\r\n\r\n/* Get all sauces: */\r\nexports.getAllSauces = (req, res, next) => {\r\n    Sauce.find()\r\n    .then(sauces => res.status(200).json(sauces))\r\n    .catch(error => res.status(400).json({error}));\r\n};\r\n\r\n/* Get one sauce: */\r\nexports.getOneSauce = (req, res, next) => { \r\n    Sauce.findOne({_id: req.params.id})\r\n    .then(sauce => res.status(200).json(sauce))\r\n    .catch(error => res.status(400).json({error}));\r\n};\r\n\r\n /* Like sauce: */\r\nexports.likeSauce = (req, res, next) => {\r\n    const like = req.body.like;\r\n    //Add like:\r\n    if (like === 1) {\r\n        Sauce.updateOne({_id: req.params.id}, {\r\n            $inc: {likes: 1},\r\n            $push: {usersLiked: req.body.userId},\r\n            _id: req.params.id\r\n        })\r\n        .then(res.status(200).json({message: 'Like added :-)'}))\r\n        .catch(res.status(400).json({error}));\r\n    }\r\n    //Add dislike:\r\n    else if (like === -1) {\r\n        Sauce.updateOne({_id: req.params.id}, {\r\n            $inc: {dislikes: 1},\r\n            $push: {usersDisliked: req.body.userId},\r\n            _id: req.params.id\r\n        })\r\n        .then(res.status(200).json({message: 'Dislike added :-('}))\r\n        .catch(res.status(400).json({error}));\r\n    }\r\n\r\n\r\n    else {\r\n        //Get sauce info (necessary to check if user likes of dislikes this particular sauce):\r\n        Sauce.findOne({_id: req.params.id})\r\n        .then(sauce => {\r\n            //Delete like:\r\n            if (sauce.usersLiked.includes(req.body.userId)) {\r\n                Sauce.updateOne({_id: req.params.id}, { \r\n                    $inc: {likes: -1},\r\n                    $pull: {usersLiked: req.body.userId},\r\n                    _id: req.params.id\r\n                    })\r\n                    .then(res.status(200).json({message: \"You no longer like this sauce\"}))\r\n                    .catch(error => res.status(400).json({error}));\r\n            }\r\n            //Delete dislike:\r\n            else if (sauce.usersDisliked.includes(req.body.userId)) {\r\n                Sauce.updateOne({_id: req.params.id}, {\r\n                    $inc: {dislikes: -1},\r\n                    $pull: {usersDisliked: req.body.userId},\r\n                    _id: req.params.id\r\n                    })\r\n                    .then(res.status(200).json({message: \"You no longer like this sauce\"}))\r\n                    .catch(error => res.status(400).json({error}));\r\n            }\r\n            else {console.log(\"There is a problem with this functionality\")}\r\n        })\r\n        .catch(error => res.status(400).json({error}));\r\n    }\r\n};"]}