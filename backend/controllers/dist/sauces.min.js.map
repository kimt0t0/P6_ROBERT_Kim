{"version":3,"sources":["sauces.js"],"names":["Sauce","require","fs","exports","getAllSauces","req","res","next","find","then","sauces","status","json","error","getOneSauce","findOne","_id","params","id","createSauce","sauceObject","JSON","parse","body","sauce","_objectSpread","concat","protocol","get","file","filename","save","modifySauce","imageUrl","_userId","imageURL","userId","auth","message","updateOne","unlink"],"mappings":"wuBAGA,IAAMA,MAAQC,QAAQ,mBAChBC,GAAKD,QAAQ,MAFnBE,QAAAC,aAAA,SAAAC,EAAAC,EAAAC,GACMP,MAAKQ,OASNC,KAAK,SAACC,GAAD,OAAYJ,EAAIK,OAAO,KAAKC,KAAKF,KATrCV,MACKC,SAAAA,GAAO,OAACK,EAAnBK,OAAA,KAAAC,KAAA,CAAAC,MAAAA,OAaAV,QAAQW,YAAc,SAACT,EAAKC,EAAKC,GAC7BQ,QAAQ,CAACC,IAAKX,EAAIY,OAAOC,KAR7Bf,KAAQC,SAAAA,GAAAA,OAAAA,EAAeO,OAAA,KAACN,KAAKC,KAQzB,MAPME,SAAAA,GACLC,OAAKH,EAAAK,OAACD,KAADE,KAAA,CAAAC,MAAAA,OAC+BV,QAAzBgB,YAAA,SAAAd,EAAAC,EAAAC,GAFZ,IAAAa,EAAAC,KAAAC,MAAAjB,EAAAkB,KAAAC,cADJJ,EAAAJ,IAmBkB,IAAIhB,MAAJyB,cAAA,GACPL,EADO,CAXdL,SAAQ,GAAAW,OAAArB,EAAAsB,SAAA,OAAAD,OAAArB,EAAAuB,IAAA,QAAA,YAAAF,OAAArB,EAAAwB,KAAAC,aACGC,OACCtB,KAAIH,WAAsBO,EAAKF,OAALE,KAAAA,KAAAA,CAAAA,QAAAA,kBAD3B,MADX,SAAAA,GAAA,OAAAP,EAAAK,OAAA,KAAAC,KAAA,CAAAC,MAAAA,OA0BJV,QAAQ6B,YAAc,SAAC3B,EAAKC,EAAKC,GAnBjCJ,IAAQgB,EAAcd,EAAAwB,KAAAJ,cAAA,GACZL,KAAAA,MAAcC,EAAKC,KAAMjB,OADb,CAElB4B,SAAOb,GAAAA,OAAYJ,EAFmBW,SAE/BP,OAAAA,OACPf,EAAAuB,IAAA,QADOR,YAAAA,OACPf,EAAAwB,KAAAC,YAHkBL,cAAA,GAuBVpB,EAAIkB,aAjBRH,EAAAc,QACAC,MAAAA,QAAQ,CAAAnB,IAAKX,EAAIsB,OAAAA,KAHrBlB,KAAA,SAAAe,GAQCf,EAAM2B,QAAM/B,EAAAgC,KAAAD,OACE9B,EAAKM,OAAK,KAAAA,KAAA,CAAA0B,QAAA,mBAElBtC,MAAAuC,UAAK,CAAAvB,IAAAX,EAAAY,OAAAC,IAALO,cAAA,GAAKL,EAAL,CAAKJ,IAAAX,EAAAY,OAAAC,MAAIT,KAAA,WAAA,OAAqBH,EAAAK,OAAA,KAAAC,KAAA,CAAA0B,QAAA,uBAA9B,MAA+BzB,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,KAAAA,KAAAA,CAAAA,MAAAA,QARlCsB,MAPR,SAAAtB,GAAA,OAAAP,EAAAK,OAAA,KAAAC,KAAA,CAAAC,MAAAA,OAmBAV,QAAQ6B,YAAc,SAAA3B,EAAAC,EAACD,GACnBL,MAAMoB,QAAW,CAAGf,IAAIwB,EAAJZ,OAAAC,KAEhBe,KAAQ,SAAAT,GAFQ,GAAAA,EAAAY,QAGRb,EAHZc,KAAAD,OAKOhB,EAAWT,OAACuB,KAAnBtB,KAAA,CAAA0B,QAAA,uBACc,CAAUrB,IAAOC,EAAAA,MAAAA,SAAAA,MAAAA,YAAAA,GACrBhB,GAAAsC,OAAA,UAAAd,OAAWI,GAAA,WACT9B,MAAgBK,UAAS+B,CAAAA,IAAQ/B,EAAAY,OAAAC,KACjBN,KAAK,WAAAN,EAAAK,OAAA,KAAAC,KAAA,CAAA0B,QAAA,uBADrB,MAC+B,SAAAzB,GAAA,OAAAP,EAAAK,OAAA,KAAAC,KAAA,CAAAC,MAAAA,WAT3C,MAYqC,SAAAA,GAACI,OAAOC,EAAAA,OAAAA,KAAAA,KAAAA,CAAAA,MAAAA","file":"sauces.min.js","sourcesContent":["/* *** SAUCE CONTROLLER *** */\r\n\r\n/* VARIABLES */\r\nconst Sauce = require('../models/Sauce');\r\nconst fs = require('fs');\r\n\r\n\r\n/* FONCTIONS */\r\n\r\n/* Get all sauces: */\r\nexports.getAllSauces = (req, res, next) => {\r\n    Sauce.find()\r\n    .then((sauces) => res.status(200).json(sauces))\r\n    .catch(error => res.status(400).json({error}))\r\n};\r\n\r\n/* Get one sauce: */\r\nexports.getOneSauce = (req, res, next) => {\r\n    findOne({_id: req.params.id})\r\n    .then(sauce => res.status(200).json(sauce))\r\n    .catch(error => res.status(400).json({error}))\r\n};\r\n\r\n\r\n/* Create sauce: */\r\nexports.createSauce = (req, res, next) => {\r\n    const sauceObject = JSON.parse(req.body.sauce);\r\n    delete sauceObject._id;\r\n    //delete sauceObject._userId;\r\n    const sauce = new Sauce ({\r\n        ...sauceObject,\r\n        //userId: req.auth.userId,\r\n        imageURL: `${req.protocol}://${req.get('host')}/images/${req.file.filename}`,\r\n    });\r\n\r\n    sauce.save()\r\n\r\n    .then( () => {\r\n        res.status(201).json({message: 'Sauce saved'})\r\n    })\r\n    .catch(error => res.status(400).json({error}))\r\n};\r\n\r\n/* Modify sauce: */\r\nexports.modifySauce = (req, res, next) => {\r\n    const sauceObject = req.file ? {\r\n        ...JSON.parse(req.body.thing),\r\n        imageUrl: `${req.protocol}://${req.get('host')}/images/${req.file.filename}`\r\n    } : {...req.body};\r\n\r\n    delete sauceObject._userId;\r\n    Sauce.findOne({_id: req.params.id})\r\n        .then((sauce) => {\r\n            if (sauce.userId != req.auth.userId) {\r\n                res.status(401).json({message: 'Not authorized'});\r\n            }\r\n            else {\r\n                Sauce.updateOne({_id: req.params.id}, {...sauceObject, _id: req.params.id})\r\n                    .then(() => res.status(200).json({message: 'Object modified!'}))\r\n                    .catch(error => res.status(401).json({error}));\r\n            }\r\n        })\r\n        .catch(error => res.status(400).json({error}))\r\n};\r\n\r\n/* Delete sauce: */\r\nexports.deleteSauce = (req, res, next) => {\r\n    Sauce.findOne({ _id: req.params.id}) // utilisation de l'idée pour accéder à la sauce dans la bdd\r\n        .then(sauce => {\r\n            if (sauce.userId != req.auth.userId) { // vérification si utilisateur <-> créateur\r\n                res.status(401).json({message: 'Not authorized'});\r\n            } else {\r\n                const filename = thing.imageUrl.split('/images/')[1]; // récupération nom fichier dans url image\r\n                fs.unlink(`images/${filename}`, () => { //suppression du fichier et callback à exécuter ensuite\r\n                    Sauce.deleteOne({_id: req.params.id})\r\n                        .then(() => { res.status(200).json({message: 'Objet supprimé !'})})\r\n                        .catch(error => res.status(401).json({ error }));\r\n                });\r\n            }\r\n        })\r\n        .catch( error => res.status(500).json({ error }))\r\n };"]}