{"version":3,"sources":["sauces.js"],"names":["Sauce","require","fs","PasswordValidator","exports","req","res","next","sauceObject","JSON","parse","body","sauce","_id","_userId","_objectSpread","imageUrl","concat","protocol","get","file","filename","then","status","json","message","error","getAllSauces","find","sauces","getOneSauce","findOne","params","id","modifySauce","updateOne","deleteSauce","unlink","deleteOne","likeSauce"],"mappings":"wuBAGA,IAAMA,MAAQC,QAAQ,mBAChBC,GAAKD,QAAQ,MACbE,kBAAoBF,QAAQ,sBAFlCG,QAAMJ,YAAgB,SAAAK,EAAAC,EAAAC,GASlB,IAAMC,EAAcC,KAAKC,MAAML,EAAIM,KAAKC,cAEjCJ,EAAYK,WATjBV,EAAiBW,QAYL,IAAId,MAAJe,cAAA,GAPlBP,EAOkB,CAEVQ,SAAQ,GAAAC,OAAKZ,EAAIa,SAAT,OAAAD,OAAuBZ,EAAIc,IAAI,QAA/B,YAAAF,OAAiDZ,EAAIe,KAAKC,aAPhEb,OAGNc,KAAOd,WAEDI,EAAKW,OAAOvB,KAAJwB,KAAA,CAAAC,QAAA,kBALd,MAKA,SAAAC,GAAA,OAAApB,EAAAiB,OAAA,KAAAC,KAAA,CAAAE,MAAAA,OAQyBtB,QAArBuB,aAAA,SAAAtB,EAAAC,EAAAC,GAHJP,MAAA4B,OAKYN,KAAA,SAAAO,GAAQN,OAAAA,EAAOA,OAAX,KAAqBC,KAAAK,KALrC,MAK2C,SAAAH,GAALA,OAAAA,EAAAA,OAAAA,KAAAA,KAAAA,CAAAA,MAAAA,OAG1CtB,QAAA0B,YAAA,SAAAzB,EAAAC,EAAAC,GASIP,MAAM+B,QAAQ,CAAClB,IAAKR,EAAI2B,OAAOC,KAC9BX,KAAK,SAAAV,GAAK,OAAIN,EAAIiB,OAAO,KAAKC,KAAKZ,KADpC,MARIe,SAAAA,GAAAA,OAARrB,EAAuBiB,OAAA,KAAAC,KAAA,CAAAE,MAAAA,OAGPtB,QAAA8B,YAAe,SAAA7B,EAAKmB,EAAKjB,GAACmB,IAAAA,EAAAA,EAAAA,KAAAA,cAAAA,GAA1BjB,KAAAC,MAAAL,EAAAM,KAAAC,OAA0Bc,CAFtCV,SAAA,GAAAC,OAAAZ,EAAAa,SAAA,OAAAD,OAAAZ,EAAAc,IAAA,QAAA,YAAAF,OAAAZ,EAAAe,KAAAC,YAEsCK,cAAAA,GAH1CrB,EAAAM,MAoBIX,MAAMmC,UAAU,CAACtB,IAAKR,EAAI2B,OAAOC,IAAjClB,cAAA,GAA0CP,EAA1C,CAAuDK,IAAKR,EAAI2B,OAAOC,MACtEX,KAAK,WAAA,OAAMhB,EAAIiB,OAAO,KAAKC,KAAK,CAACC,QAAS,uBAD3C,MAbIK,SAAAA,GAAAA,OAARxB,EAAsBiB,OAAA,KAAAC,KAAA,CAAWjB,MAAAA,OAElBH,QAAAgC,YAAe,SAAA/B,EAAKmB,EAAKZ,GADpCZ,MAAA+B,QAEO,CAAAlB,IAAAa,EAAAA,OAAKO,KAAAX,KAAA,SAAAV,GAA0Bc,IAAAA,EAAAA,EAAAA,SAAAA,MAAAA,WAAAA,GAA1BxB,GAAAmC,OAAA,UAAApB,OAAAI,GAAA,WAFZrB,MAAAsC,UAAA,CAAAzB,IAAAR,EAAA2B,OAAAC,KADJX,KAAA,WAAA,OAAAhB,EAAAiB,OAAA,KAAAC,KAAA,CAAAC,QAAA,qBACI,MAKJ,SAAAC,GAAA,OAAApB,EAAAiB,OAAA,KAAAC,KAAA,CAAAE,MAAAA,WAEwBtB,QAAAmC,UAAA,SAAAlC,EAGZA,EAAIM,GAEZX,EAAMmC,OAAAA,KAAUX,KAAA,CAAAC,QAAA","file":"sauces.min.js","sourcesContent":["/* *** SAUCE CONTROLLER *** */\r\n\r\n/* VARIABLES */\r\nconst Sauce = require('../models/Sauce');\r\nconst fs = require('fs');\r\nconst PasswordValidator = require('password-validator');\r\n\r\n\r\n/* FONCTIONS */\r\n\r\n/* Create sauce: */\r\nexports.createSauce = (req, res, next) => {\r\n    const sauceObject = JSON.parse(req.body.sauce);\r\n\r\n    delete sauceObject._id;\r\n    delete sauceObject._userId;\r\n    \r\n    const sauce = new Sauce ({\r\n        ...sauceObject,\r\n        imageUrl: `${req.protocol}://${req.get('host')}/images/${req.file.filename}`,\r\n    });\r\n\r\n    sauce.save()\r\n\r\n    .then( () => {\r\n        res.status(201).json({message: 'Sauce saved'})\r\n    })\r\n    .catch(error => res.status(400).json({error}));\r\n};\r\n\r\n/* Get all sauces: */\r\nexports.getAllSauces = (req, res, next) => {\r\n    Sauce.find()\r\n    .then(sauces => res.status(200).json(sauces))\r\n    .catch(error => res.status(400).json({error}));\r\n};\r\n\r\n/* Get one sauce: */\r\nexports.getOneSauce = (req, res, next) => { \r\n    Sauce.findOne({_id: req.params.id})\r\n    .then(sauce => res.status(200).json(sauce))\r\n    .catch(error => res.status(400).json({error}));\r\n};\r\n\r\n/* Modify sauce: */\r\nexports.modifySauce = (req, res, next) => {\r\n    const sauceObject = req.file ? {\r\n        ...JSON.parse(req.body.sauce),\r\n        imageUrl: `${req.protocol}://${req.get('host')}/images/${req.file.filename}`\r\n    } : {...req.body};\r\n\r\n    Sauce.updateOne({_id: req.params.id}, {...sauceObject, _id: req.params.id})\r\n    .then(() => res.status(200).json({message: 'Object modified!'}))\r\n    .catch(error => res.status(401).json({error}));\r\n};\r\n\r\n/* Delete sauce: */\r\nexports.deleteSauce = (req, res, next) => {\r\n    Sauce.findOne({_id: req.params.id})\r\n    .then(sauce => {\r\n        const filename = sauce.imageUrl.split('/images')[1]; //récupération adresse image\r\n        fs.unlink(`images/${filename}`, () => { //suppression image du serveur\r\n        Sauce.deleteOne({_id: req.params.id})\r\n        .then(() => res.status(200).json({message: 'Sauce deleted!'}))\r\n        .catch(error => res.status(400).json({error}))\r\n    });\r\n    });\r\n };\r\n\r\n /* Like sauce: */\r\nexports.likeSauce = (req, res, next) => {\r\n    res.status(200).json({message: 'Objet liké !'});\r\n};"]}