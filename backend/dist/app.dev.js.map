{"version":3,"sources":["app.js"],"names":["express","require","mongoose","path","userRoutes","User","app","use","connect","useNewUrlParser","useUnifiedTopology","then","console","log","json","req","res","next","setHeader","post","body","status","message","module","exports"],"mappings":";;AAAA;;AAEA;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMG,UAAU,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,eAAD,CAApB;;AAEA,IAAMK,GAAG,GAAGN,OAAO,EAAnB;AAEA;;AACAM,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBH,UAArB;AAEA;;AACAF,QAAQ,CAACM,OAAT,CAAiB,oGAAjB,EACE;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AACEC,EAAAA,kBAAkB,EAAE;AADtB,CADF,EAIGC,IAJH,CAIQ;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,+BAAZ,CAAN;AAAA,CAJR,WAKS;AAAA,SAAMD,OAAO,CAACC,GAAR,CAAY,+BAAZ,CAAN;AAAA,CALT;AAOA;AACA;;AACAP,GAAG,CAACC,GAAJ,CAAQP,OAAO,CAACc,IAAR,EAAR,E,CAEA;;AACAR,GAAG,CAACC,GAAJ,CAAQ,UAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wEAA9C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wCAA9C;AACAD,EAAAA,IAAI;AACP,CALD;AAOAX,GAAG,CAACa,IAAJ,CAAS,WAAT,EAAsB,UAACJ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtCL,EAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACK,IAAhB;AACAJ,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBP,IAAhB,CAAqB;AACjBQ,IAAAA,OAAO,EAAE;AADQ,GAArB;AAGH,CALD,E,CAOA;;AACAhB,GAAG,CAACC,GAAJ,CAAQ,UAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACF,IAAJ,CAAS;AAAEQ,IAAAA,OAAO,EAAE;AAAX,GAAT,EADwB,CAExB;;AACAL,EAAAA,IAAI;AACP,CAJD;AAMAM,MAAM,CAACC,OAAP,GAAiBlB,GAAjB","sourcesContent":["/* *** APPLICATION BACK *** */\r\n\r\n/* VARIABLES */\r\nconst express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst path = require('path');\r\n\r\nconst userRoutes = require('./routes/user');\r\nconst User = require('./models/user');\r\n\r\nconst app = express();\r\n\r\n/* ENREGISTREMENT DU ROUTEUR */\r\napp.use('/api/user', userRoutes);\r\n\r\n/* CONNEXION MONGODB */\r\nmongoose.connect('mongodb+srv://kimt0t0:<BdmNH6SUZFIkVT0u>@cluster0.omuvgnu.mongodb.net/?retryWrites=true&w=majority',\r\n  { useNewUrlParser: true,\r\n    useUnifiedTopology: true \r\n    })\r\n  .then(() => console.log('Connexion à MongoDB réussie !'))\r\n  .catch(() => console.log('Connexion à MongoDB échouée !'));\r\n\r\n/* MIDDLEWARES */\r\n// Express reçoit les requêtes avec un Content-Type 'application/json' et les met à disposition sur l'objet req:\r\napp.use(express.json());\r\n\r\n// Prévention erreurs CORS:\r\napp.use((req, res, next) => {\r\n    res.setHeader('Access-Control-Allow-Origin', '*');\r\n    res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\r\n    next();\r\n});\r\n\r\napp.post('/api/user', (req, res, next) => {\r\n    console.log(req.body);\r\n    res.status(201).json({\r\n        message: 'Objet créé !'\r\n    });\r\n});\r\n\r\n//Confirmation requête de l'app au serveur:\r\napp.use((req, res, next) => {\r\n    res.json({ message: 'Votre requête a bien été reçue !' });\r\n    // instructions\r\n    next();\r\n});\r\n\r\nmodule.exports = app;"],"file":"app.dev.js"}