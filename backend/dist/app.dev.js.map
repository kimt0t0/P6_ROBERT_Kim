{"version":3,"sources":["app.js"],"names":["express","require","mongoose","path","userRoutes","saucesRoutes","User","Sauce","app","use","join","_dirname","config","user","process","env","DB_USER","pass","DB_PASS","connect","useNewUrlParser","useUnifiedTopology","then","console","log","req","res","next","setHeader","json","message","module","exports"],"mappings":";;AAAA;;AAEA;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMG,UAAU,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMI,YAAY,GAAGJ,OAAO,CAAC,gBAAD,CAA5B;;AACA,IAAMK,IAAI,GAAGL,OAAO,CAAC,eAAD,CAApB;;AACA,IAAMM,KAAK,GAAGN,OAAO,CAAC,gBAAD,CAArB;;AAEA,IAAMO,GAAG,GAAGR,OAAO,EAAnB;AAEA;;AACAQ,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBT,OAAO,UAAP,CAAeG,IAAI,CAACO,IAAL,CAAUC,QAAV,EAAoB,QAApB,CAAf,CAAnB;AACAH,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBL,UAArB;AACAI,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBJ,YAAtB;AAEA;;AACAJ,OAAO,CAAC,QAAD,CAAP,CAAkBW,MAAlB;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAzB;AACA,IAAMC,IAAI,GAAGH,OAAO,CAACC,GAAR,CAAYG,OAAzB;AAEAhB,QAAQ,CAACiB,OAAT,yBAAkCN,IAAlC,cAA0CI,IAA1C,iEACE;AAAEG,EAAAA,eAAe,EAAE,IAAnB;AACEC,EAAAA,kBAAkB,EAAE;AADtB,CADF,EAIGC,IAJH,CAIQ;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,+BAAZ,CAAN;AAAA,CAJR,WAKS;AAAA,SAAMD,OAAO,CAACC,GAAR,CAAY,+BAAZ,CAAN;AAAA,CALT;AAQA;AAEA;;AACAhB,GAAG,CAACC,GAAJ,CAAQ,UAACgB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wEAA9C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wCAA9C;AACAD,EAAAA,IAAI;AACP,CALD,E,CAOA;;AACAnB,GAAG,CAACC,GAAJ,CAAQ,UAACgB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACG,IAAJ,CAAS;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAT,EADwB,CAExB;;AACAH,EAAAA,IAAI;AACP,CAJD;AAMAI,MAAM,CAACC,OAAP,GAAiBxB,GAAjB","sourcesContent":["/* *** APPLICATION BACK *** */\r\n\r\n/* VARIABLES */\r\nconst express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst path = require('path');\r\n\r\nconst userRoutes = require('./routes/user');\r\nconst saucesRoutes = require('./routes/sauce');\r\nconst User = require('./models/User');\r\nconst Sauce = require('./models/Sauce');\r\n\r\nconst app = express();\r\n\r\n/* ENREGISTREMENT DES ROUTEURS */\r\napp.use('/images', express.static(path.join(_dirname, 'images')));\r\napp.use('/api/user', userRoutes);\r\napp.use('/api/sauce', saucesRoutes);\r\n\r\n/* CONNEXION MONGODB */\r\nrequire('dotenv').config();\r\nconst user = process.env.DB_USER;\r\nconst pass = process.env.DB_PASS;\r\n\r\nmongoose.connect(`mongodb+srv://${user}:${pass}@cluster0.omuvgnu.mongodb.net/?retryWrites=true&w=majority`,\r\n  { useNewUrlParser: true,\r\n    useUnifiedTopology: true \r\n    })\r\n  .then(() => console.log('Connexion à MongoDB réussie !'))\r\n  .catch(() => console.log('Connexion à MongoDB échouée !'));\r\n\r\n\r\n/* MIDDLEWARES */\r\n\r\n// Prévention erreurs CORS:\r\napp.use((req, res, next) => {\r\n    res.setHeader('Access-Control-Allow-Origin', '*');\r\n    res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\r\n    next();\r\n});\r\n\r\n//Confirmation requête de l'app au serveur:\r\napp.use((req, res, next) => {\r\n    res.json({ message: 'Votre requête a bien été reçue !' });\r\n    // instructions\r\n    next();\r\n});\r\n\r\nmodule.exports = app;"],"file":"app.dev.js"}