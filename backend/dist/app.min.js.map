{"version":3,"sources":["app.js"],"names":["express","require","mongoose","User","app","userRoutes","connect","useNewUrlParser","use","then","console","log","json","req","res","next","setHeader","body","message"],"mappings":"aAGA,IAAMA,QAAUC,QAAQ,WADxBC,SAAAD,QAAA,YACMD,KAAOC,QAAU,QACjBC,WAAWD,QAAQ,iBAInBE,KAAOF,QAAQ,iBAEfG,IAAMJ,UAFZI,IAAMD,IAAI,YAAWE,YAIrBH,SAAAI,QAAA,qGAKE,CAAEC,iBAAiB,EAJjBC,oBAAiBH,IAOlBI,KAAK,WAAA,OAAMC,QAAQC,IAAI,mCAR1B,MAISL,WAAAA,OAAAA,QAAQK,IAAA,mCAITP,IAAAI,IAAAR,QAAaY,QACZR,IALTI,IAAA,SAAAK,EAAAC,EAAAC,GAOAD,EAAAE,UAAA,8BAAA,KACAF,EAAAE,UAAA,+BAAA,0EAOIF,EAAIE,UAAU,+BAAgC,0CAN9CR,MAIAM,IAAAA,KAAIE,YAAU,SAAAH,EAAAC,EAAAC,GACdD,QAAIE,IAAUH,EAAAI,MACdH,EAAIE,OAAJ,KAAcJ,KAAA,CACVM,QAAA,mBAMAA,IAAAA,IAAAA,SAAAA,EAASJ,EAAAC,GADbD,EAAAF,KAAA,CAAAM,QAAA,qCASAH,MAFWG,OAAAA,QAASd","file":"app.min.js","sourcesContent":["/* *** APPLICATION BACK *** */\r\n\r\n/* VARIABLES */\r\nconst express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst path = require('path');\r\n\r\nconst userRoutes = require('./routes/user');\r\nconst User = require('./models/User');\r\n\r\nconst app = express();\r\n\r\n/* ENREGISTREMENT DU ROUTEUR */\r\napp.use('/api/user', userRoutes);\r\n\r\n/* CONNEXION MONGODB */\r\nmongoose.connect('mongodb+srv://kimt0t0:<BdmNH6SUZFIkVT0u>@cluster0.omuvgnu.mongodb.net/?retryWrites=true&w=majority',\r\n  { useNewUrlParser: true,\r\n    useUnifiedTopology: true \r\n    })\r\n  .then(() => console.log('Connexion à MongoDB réussie !'))\r\n  .catch(() => console.log('Connexion à MongoDB échouée !'));\r\n\r\n/* MIDDLEWARES */\r\n// Express reçoit les requêtes avec un Content-Type 'application/json' et les met à disposition sur l'objet req:\r\napp.use(express.json());\r\n\r\n// Prévention erreurs CORS:\r\napp.use((req, res, next) => {\r\n    res.setHeader('Access-Control-Allow-Origin', '*');\r\n    res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\r\n    next();\r\n});\r\n\r\napp.post('/api/user', (req, res, next) => {\r\n    console.log(req.body);\r\n    res.status(201).json({\r\n        message: 'Objet créé !'\r\n    });\r\n});\r\n\r\n//Confirmation requête de l'app au serveur:\r\napp.use((req, res, next) => {\r\n    res.json({ message: 'Votre requête a bien été reçue !' });\r\n    // instructions\r\n    next();\r\n});\r\n\r\nmodule.exports = app;"]}