{"version":3,"sources":["auth.js"],"names":["jwt","require","module","exports","req","res","next","token","headers","authorization","split","decodedToken","verify","userId","auth","error","status","json"],"mappings":";;AAAA;AACA;;AAEA;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;AAEA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC,MAAI;AACA,QAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAd,CADA,CACuD;;AACvD,QAAMC,YAAY,GAAGX,GAAG,CAACY,MAAJ,CAAWL,KAAX,EAAkB,qBAAlB,CAArB,CAFA,CAE+D;;AAC/D,QAAMM,MAAM,GAAGF,YAAY,CAACE,MAA5B,CAHA,CAGoC;;AACpCT,IAAAA,GAAG,CAACU,IAAJ,GAAW;AACPD,MAAAA,MAAM,EAAEA;AADD,KAAX;AAGAP,IAAAA,IAAI;AACP,GARD,CASA,OAAMS,KAAN,EAAa;AACTV,IAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACF,MAAAA,KAAK,EAALA;AAAD,KAArB;AACH;AACJ,CAbD","sourcesContent":["/* *** MIDDLEWARE D'AUTHENTIFICATION *** */\r\n//sert à vérifier que l'utilisateur est connecté et transmettre les infos de connexion lors des requêtes\r\n\r\n/* VARIABLES */\r\nconst jwt = require('jsonwebtoken');\r\n\r\n/* ACTIONS */\r\nmodule.exports = (req, res, next) => {\r\n    try {\r\n        const token = req.headers.authorization.split(' ')[1]; // récupération du token dans le header de la requête\r\n        const decodedToken = jwt.verify(token, 'RANDOM_SECRET_TOKEN'); // décodage token\r\n        const userId = decodedToken.userId; // récupération id utilisateur et ajout à l'objet Request pour que les routes puissent l'utiliser\r\n        req.auth = {\r\n            userId: userId\r\n        };\r\n        next();\r\n    }\r\n    catch(error) {\r\n        res.status(401).json({error});\r\n    }\r\n};"],"file":"auth.dev.js"}